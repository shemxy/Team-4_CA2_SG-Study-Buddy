//hariz
const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const PORT = 3000;

app.use(bodyParser.urlencoded({ extended: true }));

app.use(express.static(path.join(__dirname, 'images')));

let reviews = [
    {
        id: '1',
        productName: 'Sony WH-1000XM4 Headphones',
        rating: '8/10',
        category: 'Audio',
        reviewText: "I'm really impressed with the Sony WH-1000XM4 headphones. The noise cancellation continues to be industry-leading; I find they effectively silence distractions and give me a truly immersive listening experience. Audio quality is excellent too, with a balanced and detailed sound profile that works well for whatever music I'm in the mood for. And when it comes to comfort, they're a highlight – those plush earcups and the lightweight design mean I can wear them for hours without any issues. While the design hasn't changed much from the previous model, I really appreciate the added features like multipoint connectivity and improved call quality. For me, they definitely remain a top choice in the premium noise-cancelling headphone market.",
        image: 'xm4.png'
    },
    {
        id: '2',
        productName: 'Apple iPad Pro 11-inch (2022)',
        rating: '10/10',
        category: 'Tablet',
        reviewText: "I've been using the iPad Pro 11-inch with the M2 chip for a while now, and I'm consistently blown away by its power and responsiveness. Everything I throw at it, from intense video editing to complex graphic design, just glides without a hitch. The Liquid Retina display is simply stunning; colors pop, and the ProMotion technology makes scrolling and animations feel incredibly smooth. I also really appreciate the portability of the 11-inch size – it's perfect for carrying around in my bag and using on the go, making it feel like a true laptop replacement for most of my tasks. And with the Apple Pencil and Magic Keyboard, it truly transforms into a versatile productivity machine. I honestly don't feel like I'm missing out on much by not having a larger tablet or even a laptop for a lot of my daily work.",
        image: 'ipad.png'
    },
    {
        id: '3',
        productName: 'Apple iPhone 13 Pro Max',
        rating: '9/10',
        category: 'Smartphone',
        reviewText: "My iPhone 13 Pro Max has been a reliable companion. What immediately stood out to me was the incredible battery life – I can easily go a full day, often even a day and a half, of heavy usage without needing to charge, which is a huge convenience. The cameras are fantastic, especially the low-light performance and the addition of Cinematic Mode; I've captured some really impressive photos and videos with it. The ProMotion display makes everything feel so fluid and responsive, from scrolling through social media to playing games. Yes, it's a bit of a big and heavy phone, which took some getting used to initially, but the large screen is fantastic for media consumption and really makes a difference for my eyes. It feels incredibly durable and well-built, and even after all this time, I still feel it's a very capable and premium device.",
        image: 'iphone.png'
    }
];

function generateUniqueId() {
    return Date.now().toString(36) + Math.random().toString(36).substring(2);
}

const getHeader = (title) => `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" xintegrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        body {
            font-family: "SF Pro Display Bold", "SF Pro Display", "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
            background-color: #e6dfd0;
            color: #343a40;
            padding-top: 20px;
        }
        .navbar {
            border-radius: 10px;
            margin-bottom: 20px;
        }
        .btn {
            border-radius: 8px;
        }
        .form-control {
            border-radius: 8px;
            background-color: #ffffff;
            color: #343a40;
            border-color: #ced4da;
        }
        .form-control::placeholder {
            color: #6c757d;
        }
        .form-control:focus {
            background-color: #ffffff;
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        .form-label {
            color: #343a40;
        }
        .card {
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            border: 1px solid #dee2e6;
        }
        h1, h2, h3 {
            color:#000000;
        }
        .footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
            text-align: center;
            color: #6c757d;
        }
        .text-muted {
            color: #6c757d !important;
        }
        .alert-danger {
            background-color: #f8d7da;
            color: #842029;
            border-color: #f5c2c7;
        }
        .alert-warning {
            background-color: #fff3cd;
            color: #664d03;
            border-color: #ffecb5;
        }
        .alert-link {
            color:rgb(51, 63, 82);
            text-decoration: underline;
        }
        .btn-link {
            color: #0d6efd;
        }
        .btn-outline-secondary {
            color: #6c757d;
            border-color: #6c757d;
        }
        .btn-outline-secondary:hover {
            background-color: #6c757d;
            color: #ffffff;
        }
        .navbar-brand, .nav-link {
            color: rgba(0, 0, 0, 0.9) !important;
        }
        .navbar-brand:hover, .nav-link:hover {
            color: rgba(0, 0, 0, 0.7) !important;
        }
        .review-image {
            max-width: 250px;
            height: auto;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            display: block;
            margin: 0 auto;
        }
        .content-wrapper {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
            margin-bottom: 20px;
        }
        .tile-image {
            max-width: 100%;
            height: 150px;
            object-fit: contain;
            border-radius: 8px;
            margin-bottom: 10px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4 rounded-lg shadow-sm">
            <div class="container-fluid">
                <a class="navbar-brand text-dark fw-bold" href="/">Hariz's Tech Review List</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" href="/reviews">All Reviews</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/addReview">Add New Review</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
`;

const getFooter = () => `
        <footer class="footer">
            <p>&copy; ${new Date().getFullYear()} Hariz's Reviews Lists</p>
        </footer>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" xintegrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
`;

app.get('/', (req, res) => {
    const htmlContent = `
        ${getHeader('Home - Hariz Tech Review List')}
        <div class="container content-wrapper">
            <div class="text-center my-5">
                <h1 class="display-4 text-dark fw-bold">Welcome to Hariz's Tech Reviews</h1>
                <p class="lead mt-3">"Your Tech, Reviewed Right."</p>
                <p class="mt-4">Welcome to my website where I like to write reviews on the products that I own and how they help me in my day to day life!</p>
                <div class="d-grid gap-2 col-md-6 mx-auto mt-5">
                    <a href="/reviews" class="btn btn-outline-secondary btn-lg shadow">Read all reviews</a>
                    <a href="/addReview" class="btn btn-success btn-lg shadow">Add a new review</a>
                </div>
            </div>
        </div>
        ${getFooter()}
    `;
    res.send(htmlContent);
});

app.get('/reviews', (req, res) => {
    let reviewListHtml = '';
    if (reviews.length === 0) {
        reviewListHtml = '<p class="text-center text-muted">No reviews entered yet. Write some!</p>';
    } else {
        reviewListHtml = `
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                ${reviews.map(review => `
                    <div class="col">
                        <div class="card h-100 shadow-sm text-center">
                            <div class="card-body d-flex flex-column">
                                ${review.image ? `<img src="/${review.image}" alt="${review.productName}" class="tile-image">` : ''}
                                <h5 class="card-title text-dark">${review.productName}</h5>
                                <p class="card-text mb-1"><strong>Rating:</strong> ${review.rating}</p>
                                <p class="card-text mb-1"><strong>Category:</strong> ${review.category}</p>
                            </div>
                            <div class="card-footer d-flex flex-column align-items-center bg-white border-top-0 pt-0">
                                <a href="/reviews/${review.id}" class="btn btn-sm btn-outline-dark w-100 mb-2">View Details</a>
                                <div class="d-flex w-100 justify-content-center gap-2">
                                    <a href="/updateReview/${review.id}" class="btn btn-sm btn-outline-success flex-grow-1">Edit</a>
                                    <form action="/deleteReview/${review.id}" method="POST" class="d-inline flex-grow-1">
                                        <input type="hidden" name="id" value="${review.id}">
                                        <button type="submit" class="btn btn-sm btn-outline-danger w-100">Delete</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        `;
    }

    const htmlContent = `
        ${getHeader('My Tech Reviews')}
        <div class="container content-wrapper">
            <h2 class="mb-4 text-center">My Tech Reviews</h2>
            ${reviewListHtml}
            <div class="d-grid gap-2 col-md-4 mx-auto mt-4">
                <a href="/addReview" class="btn btn-success btn-lg shadow">Write New Review</a>
            </div>
        </div>
        ${getFooter()}
    `;
    res.send(htmlContent);
});

app.get('/addReview', (req, res) => {
    const htmlContent = `
        ${getHeader('Write New Review')}
        <div class="container content-wrapper">
            <h2 class="mb-4 text-center">Write a New Review</h2>
            <div class="card p-4 shadow-sm">
                <form action="/addReview" method="POST">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name:</label>
                        <input type="text" class="form-control" id="productName" name="productName" required>
                    </div>
                    <div class="mb-3">
                        <label for="rating" class="form-label">Rating (e.g., 4/5, 8/10):</label>
                        <input type="text" class="form-control" id="rating" name="rating" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category (e.g., Audio, Laptop, Gaming):</label>
                        <input type="text" class="form-control" id="category" name="category" required>
                    </div>
                    <div class="mb-3">
                        <label for="reviewText" class="form-label">Your Review:</label>
                        <textarea class="form-control" id="reviewText" name="reviewText" rows="5"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="image" class="form-label">Image Filename (e.g., product.jpg):</label>
                        <input type="text" class="form-control" id="image" name="image">
                        <small class="form-text text-muted">Place images in the '/images/' folder.</small>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-success btn-lg shadow">Write Review</button>
                    </div>
                </form>
            </div>
            <div class="mt-3 text-center">
                <a href="/reviews" class="btn btn-link">Back to Reviews</a>
            </div>
        </div>
        ${getFooter()}
    `;
    res.send(htmlContent);
});

app.post('/addReview', (req, res) => {
    const { productName, rating, category, reviewText, image } = req.body;

    if (!productName || !rating || !category) {
        return res.send(`
            ${getHeader('Error - Add Review')}
            <div class="container content-wrapper">
                <div class="alert alert-danger" role="alert">
                    Please fill in all required fields (Product Name, Rating, Category).
                    <a href="/addReview" class="alert-link">Go back to add reviews page.</a>
                </div>
            </div>
            ${getFooter()}
        `);
    }

    const newReview = {
        id: generateUniqueId(),
        productName,
        rating,
        category,
        reviewText,
        image: image || ''
    };
    reviews.push(newReview);
    res.redirect('/reviews');
});

app.post('/deleteReview/:id', (req, res) => {
    const reviewIdToDelete = req.params.id;
    const initialLength = reviews.length;
    reviews = reviews.filter(review => review.id !== reviewIdToDelete);

    if (reviews.length === initialLength) {
        console.log(`Attempted to delete review with ID ${reviewIdToDelete}, but it was not found.`);
    } else {
        console.log(`Successfully deleted review with ID ${reviewIdToDelete}.`);
    }
    res.redirect('/reviews');
});

app.get('/updateReview/:id', (req, res) => {
    const reviewIdToUpdate = req.params.id;
    const review = reviews.find(r => r.id === reviewIdToUpdate);

    if (!review) {
        return res.send(`
            ${getHeader('Review Not Found')}
            <div class="container content-wrapper">
                <div class="alert alert-warning" role="alert">
                    Review not found!
                    <a href="/reviews" class="alert-link">Back to Reviews</a>
                </div>
            </div>
            ${getFooter()}
        `);
    }

    const htmlContent = `
        ${getHeader(`Update Review: ${review.productName}`)}
        <div class="container content-wrapper">
            <h2 class="mb-4 text-center">Update Review Details</h2>
            <div class="card p-4 shadow-sm">
                <form action="/updateReview/${review.id}" method="POST">
                    <input type="hidden" name="id" value="${review.id}">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name:</label>
                        <input type="text" class="form-control" id="productName" name="productName" value="${review.productName}" required>
                    </div>
                    <div class="mb-3">
                        <label for="rating" class="form-label">Rating (e.g., 4/5, 8/10):</label>
                        <input type="text" class="form-control" id="rating" name="rating" value="${review.rating}" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category (e.g., Audio, Laptop, Gaming):</label>
                        <input type="text" class="form-control" id="category" name="category" value="${review.category}" required>
                    </div>
                    <div class="mb-3">
                        <label for="reviewText" class="form-label">Your Review:</label>
                        <textarea class="form-control" id="reviewText" name="reviewText" rows="5">${review.reviewText}</textarea>
                    </div>
                    <div class="mb-3">
                        <label for="image" class="form-label">Image Filename (e.g., product.jpg):</label>
                        <input type="text" class="form-control" id="image" name="image" value="${review.image || ''}">
                        <small class="form-text text-muted">Place images in the '/images/' folder.</small>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-lg shadow">Update Review</button>
                    </div>
                </form>
            </div>
            <div class="mt-3 text-center">
                <a href="/reviews" class="btn btn-link">Back to Reviews</a>
            </div>
        </div>
        ${getFooter()}
    `;
    res.send(htmlContent);
});

app.post('/updateReview/:id', (req, res) => {
    const reviewIdToUpdate = req.params.id;
    const { productName, rating, category, reviewText, image } = req.body;

    if (!productName || !rating || !category) {
        return res.send(`
            ${getHeader('Error - Update Review')}
            <div class="container content-wrapper">
                <div class="alert alert-danger" role="alert">
                    Please fill in all required fields.
                    <a href="/updateReview/${reviewIdToUpdate}" class="alert-link">Go back to update page.</a>
                </div>
            </div>
            ${getFooter()}
        `);
    }

    const reviewIndex = reviews.findIndex(r => r.id === reviewIdToUpdate);

    if (reviewIndex !== -1) {
        reviews[reviewIndex] = {
            id: reviewIdToUpdate,
            productName,
            rating,
            category,
            reviewText,
            image: image || ''
        };
        console.log(`Successfully updated review with ID ${reviewIdToUpdate}.`);
    } else {
        console.log(`Attempted to update review with ID ${reviewIdToUpdate}, but it was not found.`);
    }
    res.redirect('/reviews');
});

app.get('/reviews/:id', (req, res) => {
    const reviewId = req.params.id;
    const review = reviews.find(r => r.id === reviewId);

    if (!review) {
        return res.send(`
            ${getHeader('Review Not Found')}
            <div class="container content-wrapper">
                <div class="alert alert-warning" role="alert">
                    Sorry, the review you are looking for was not found.
                    <a href="/reviews" class="alert-link">Back to All Reviews</a>
                </div>
            </div>
            ${getFooter()}
        `);
    }

    const reviewImageHtml = review.image
        ? `<img src="/${review.image}" alt="${review.productName}" class="img-fluid review-image mb-3">`
        : '';

    const htmlContent = `
        ${getHeader(`Details for: ${review.productName}`)}
        <div class="container content-wrapper">
            <h2 class="mb-4 text-center">Review Details</h2>
            <div class="card p-4 shadow-sm">
                <div class="row">
                    <div class="col-md-4 text-center">
                        ${reviewImageHtml}
                        <h3 class="card-title text-dark display-6">${review.productName}</h3>
                        <p class="card-text fs-5"><strong>Rating:</strong> ${review.rating}</p>
                        <p class="card-text fs-5"><strong>Category:</strong> ${review.category}</p>
                    </div>
                    <div class="col-md-8">
                        <p class="card-text fs-5"><strong>Full Review:</strong></p>
                        <p class="card-text border p-3 rounded bg-light text-start fs-5">${review.reviewText}</p>
                    </div>
                </div>
                <hr>
                <div class="d-flex justify-content-between mt-3">
                    <a href="/reviews" class="btn btn-outline-secondary">Back to All Reviews</a>
                    <a href="/updateReview/${review.id}" class="btn btn-success">Edit Review</a>
                </div>
            </div>
        </div>
        ${getFooter()}
    `;
    res.send(htmlContent);
});

app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});